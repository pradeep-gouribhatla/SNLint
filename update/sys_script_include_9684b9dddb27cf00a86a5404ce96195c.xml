<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_snlint.AstTraverse</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>AstTraverse</name>
        <script><![CDATA[var AstTraverse = Class.create();

AstTraverse.prototype = {
	
	initialize: function() {
		this.parser = new ESTraverse();
    },
	
	// Should be part of different script
	getParseContext: function() {
		
		return {};
	},

	parseAndExecuteRules: function(ast, rules, context){
		
		if (!ast || !rules || !context) return;
				
		var astNodeKeys = Object.keys(this.parser.VisitorKeys);
		
		var ruleObjects = rules.map(function(rule) { 
			var snRuleGR = new GlideRecord('x_snc_snlint_rules');
			if (snRuleGR.get(rule.sys_id)){
				var gsEvaluator = new GlideScopedEvaluator();
				var scriptContext = { 'context' : context};
				var nodeRuleObj =  gsEvaluator.evaluateScript(snRuleGR, 'script', scriptContext);
				
				return nodeRuleObj;
			}

		});
		
		
		return this.traverseNodesWithRules(ast, ruleObjects, context);
		
	},
	
	traverseNodesWithRules: function(ast, ruleObjects, context){
		
		if(!ast) return;
		
		this.parser.traverse(ast, {
			enter: function(node, parent) {
				node.parent = parent;
				ruleObjects.forEach(function(ruleObj){
					if(node.type && Object.keys(ruleObj).indexOf(node.type) >= 0 ){
						if (typeof ruleObjects[node.type] == "function"){
							ruleObj[node.type](node);
						}
						
					}
				});
			},
			leave: function(node, parent) {
				ruleObjects.forEach(function(ruleObj){
					if(node.type && Object.keys(ruleObj).indexOf(node.type + ':exit') > 0 ){
						if (typeof ruleObjects[node.type] == "function"){
							ruleObj[node.type](node);
						}
						
					}
				});
			}
		});
	},

    type: 'AstTraverse'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>pradeep.g</sys_created_by>
        <sys_created_on>2018-01-08 07:35:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>9684b9dddb27cf00a86a5404ce96195c</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>AstTraverse</sys_name>
        <sys_package display_value="SNLint" source="x_snc_snlint">8a93f59ddb27cf00a86a5404ce961961</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SNLint">8a93f59ddb27cf00a86a5404ce961961</sys_scope>
        <sys_update_name>sys_script_include_9684b9dddb27cf00a86a5404ce96195c</sys_update_name>
        <sys_updated_by>pradeep.g</sys_updated_by>
        <sys_updated_on>2018-01-11 05:46:52</sys_updated_on>
    </sys_script_include>
</record_update>
