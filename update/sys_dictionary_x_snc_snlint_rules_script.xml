<?xml version="1.0" encoding="UTF-8"?>
<record_update>
    <sys_dictionary action="INSERT_OR_UPDATE" element="script" table="x_snc_snlint_rules">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes/>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label>Script</column_label>
        <comments/>
        <create_roles/>
        <default_value>/* RULE &#13;
 * &#13;
 * Params - The context object contains additional functionality that is helpful for &#13;
 *          rules to do their jobs.&#13;
 * 1. context.report() - USE context.report() to publish a warning or error&#13;
 *    EX - context.report(node, 'Do not use console.log in client side code');&#13;
 * 2. getFilename()&#13;
 * 3. getScope()&#13;
 * 4. getSourceCode()&#13;
 * &#13;
 * return - an object with methods that ESLint calls to "visit" nodes &#13;
 * while traversing the abstract syntax tree. key &#13;
 *      =&gt; if key is a node type, SNLint calls that visitor function while going down the tree&#13;
 *      =&gt; key plus ":exit", SNLint calls that visitor function while going up the tree&#13;
 */&#13;
&#13;
(function(context/*context of the rule*/) {&#13;
	return {&#13;
        // example callback for CallExpression Nodes&#13;
		"CallExpression": function(node) {&#13;
			&#13;
		}&#13;
	}&#13;
	&#13;
})(context);</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>script</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <internal_type display_value="Script">script</internal_type>
        <mandatory>false</mandatory>
        <max_length>8000</max_length>
        <name>x_snc_snlint_rules</name>
        <next_element/>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_dictionary</sys_class_name>
        <sys_created_by>pradeep.g</sys_created_by>
        <sys_created_on>2018-01-08 10:10:06</sys_created_on>
        <sys_id>9cbc02dddb67cf00a86a5404ce961929</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Script</sys_name>
        <sys_package display_value="SNLint" source="x_snc_snlint">8a93f59ddb27cf00a86a5404ce961961</sys_package>
        <sys_policy/>
        <sys_scope display_value="SNLint">8a93f59ddb27cf00a86a5404ce961961</sys_scope>
        <sys_update_name>sys_dictionary_x_snc_snlint_rules_script</sys_update_name>
        <sys_updated_by>pradeep.g</sys_updated_by>
        <sys_updated_on>2018-01-08 10:10:06</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_dictionary>
</record_update>
